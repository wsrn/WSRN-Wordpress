<?php 	// parent - cilds 	function get_page_menu($before = '',$after = '',$more = '<span class="label-menu-item">More ..</span>',$current = false){		$args = array(			'child_of' => 0,			'sort_order' => 'ASC',			'sort_column' => 'post_title',			'hierarchical' => 1,			'exclude' => '',			'include' => '',			'meta_key' => '',			'meta_value' => '',			'authors' => '',			'parent' => 0,			'exclude_tree' => '',			'number' => '',			'offset' => 0 ); 				$mypages = get_pages( $args );				$menu = '<ul class="menu">';				if( is_home() ){			$home = '<li class="menu-item current-menu-item first-menu-item">'; 			$home .= '<a href="'.home_url().'">'.get_home_label().'</a>' ;			$home .= '</li>';		}else{			$home = '<li class="menu-item first-menu-item">'; 			$home .= '<a href="'.home_url().'">'.get_home_label().'</a>' ;			$home .= '</li>';		}				$menu .= $home;		$count = 1;		$prefix = ''; 		foreach( $mypages as $key => $mypage ){			if( $count == get_menu_limit() ){				$menu .= '<li class="menu-item more">';				$menu .= '<a href="">' . $more . '</a>';				$menu .= '<div class="sub-menu more">';				$menu .= '<ul class="sub-menu more">';				$prefix = 'sub-';			}						// add class current-page to this item if it is current page			if( strlen( $prefix ) == 0){				if( is_page( $mypage -> post_title ) ){					$menu .= '<li class="'.$prefix.'menu-item current-menu-item" id="'.$prefix.'menu-item-' . $mypage -> ID . '">';				}else{					$menu .= '<li class="'.$prefix.'menu-item" id="'.$prefix.'menu-item-' . $mypage -> ID . '">';				}			}else{				$menu .= '<li class="'.$prefix.'menu-item" id="'.$prefix.'menu-item-' . $mypage -> ID . '">';			}						if( strlen( $prefix ) == 0 ){				if( $current ){					if( is_page( $mypage -> post_title )){						$menu .= '<a href="' . get_permalink( $mypage -> ID ) . '">' . $before .'<span class="label-menu-item">'. $mypage -> post_title . '</span>' . $after . '</a>';					}else{						$menu .= '<a href="' . get_permalink( $mypage -> ID ) . '"><span class="label-menu-item">'. $mypage -> post_title . '</span></a>';					}				}else{					$menu .= '<a href="' . get_permalink( $mypage -> ID ) . '">' . $before .'<span class="label-menu-item">'. $mypage -> post_title . '</span>' . $after . '</a>';				}			}else{				$menu .= '<a href="' . get_permalink( $mypage -> ID ) . '"><span class="label-menu-item">'. $mypage -> post_title . '</span></a>';			}						if( exists_cilds( $mypage -> ID ) ){				$menu .= get_all_cilds( $mypage -> ID );			}						$menu .= '</li>';									$count++;		}		if($count > get_menu_limit()){			$menu .= '</ul>';			$menu .= '</div>';			$menu .= '</li>';		}		$menu .= '</ul>';				return $menu;	}		function get_home_label(){		if( strlen( @get_option('fs_home_label') ) > 0 ){			$result = get_option('fs_home_label');		}else{			$result = _HOME_LABEL_;		}						return $result;	}		function get_menu_limit(){		if( strlen( @get_option('fi_menu_limit') ) > 0 ){			$result = get_option('fi_menu_limit');		}else{			$result = _LIMIT_;		}				return $result;	}		function exists_cilds( $id ){		$args = array(		'child_of' => $id,		'sort_order' => 'ASC',		'sort_column' => 'post_title',		'hierarchical' => 1,		'exclude' => '',		'include' => '',		'meta_key' => '',		'meta_value' => '',		'authors' => '',		'parent' => $id,		'exclude_tree' => '',		'number' => '',		'offset' => 0 ); 				$cilds = get_pages($args);				if(count($cilds) > 0){			$result = true;		}else{			$result = false;		}				return $result;	}		function get_all_cilds($id){		$args = array(		'child_of' => $id,		'sort_order' => 'ASC',		'sort_column' => 'post_title',		'hierarchical' => 1,		'exclude' => '',		'include' => '',		'meta_key' => '',		'meta_value' => '',		'authors' => '',		'parent' => $id,		'exclude_tree' => '',		'number' => '',		'offset' => 0 ); 				$cilds = get_pages( $args );				$submenu  = '<div id="sub-menu-' . $id . '" class="sub-menu">';		$submenu  .= '<ul class="sub-menu">';				foreach( $cilds as $key => $cild ){						$submenu .= '<li class="sub-menu-item" id="sub-menu-item-' . $cild -> ID . '">';			$submenu .= '<a href="' . get_post_permalink( $cild -> ID ) . '">' . $cild -> post_title . '</a>';			if( exists_cilds( $cild -> ID ) ){				$submenu .= get_all_cilds( $cild -> ID );			}			$submenu .= '</li>';		}				$submenu .= '</ul>';		$submenu .= '</div>';				return $submenu;	}						// my menu		class mythemes_walker_nav_menu extends Walker {		var $tree_type = array( 'post_type', 'taxonomy', 'custom' );		var $db_fields = array( 'parent' => 'menu_item_parent', 'id' => 'db_id' );				var $count = 0;		var $need_more = false; 		var $item_type = '';				var $limit = 5;		var $oncurrent = false;		var $before = '';		var $after = ''; 		var $more  = '<span class="label-menu-item">More ..</span>';				function __construct($limit,$before,$after,$more,$oncurrent) {				$this -> limit     = $limit;				$this -> before    = $before;				$this -> after     = $after;				$this -> more      = $more;				$this -> oncurrent = $oncurrent;		} 				function start_lvl(&$output, $depth) {			$indent = str_repeat("\t", $depth);			$output .= "\n$indent<div class=\"sub-menu\"><ul class=\"sub-menu\">\n";		}		function end_lvl(&$output, $depth) {			$indent = str_repeat("\t", $depth);			$output .= "$indent</ul></div>\n";		}		function start_el(&$output, $item, $depth, $args) {											if ($depth == 0){				$this -> count++;								if($this -> limit == $this -> count){					$this -> need_more = true;					$output .= '<li class="menu-item more">';					$output .= '<a href="#">' . $this -> more . '</a>';					$output .= '<div class="sub-menu more">';					$output .= '<ul class="sub-menu more">';				}			} 						global $wp_query;			$indent = ( $depth ) ? str_repeat( "\t", $depth ) : '';			$class_names = $value = '';			$classes = empty( $item->classes ) ? array() : (array) $item->classes;			$classes[] = 'menu-item-' . $item->ID;						// add class first-menu-item to first items			if($this -> count == 1){				$classes[] = 'first-menu-item';			}						// del class current-menu-item from sub-items			if($this -> count >= $this -> limit){				$classes[ array_search( 'menu-item' , $classes ) ] = 'sub-menu-item';				if( in_array( 'current-menu-item' , $classes ) ){					unset($classes[ array_search( 'current-menu-item' , $classes ) ]);				}			}									$class_names = join( ' ', apply_filters( 'nav_menu_css_class', array_filter( $classes ), $item ) );						if( $item -> menu_item_parent > 0 ){				$class_names = ' class="sub-menu-item ' . str_replace('menu-item ','', esc_attr( $class_names ) ) . '"';			}else{				$class_names = ' class="' . esc_attr( $class_names ) . '"';			}						$id = apply_filters( 'nav_menu_item_id', 'menu-item-'. $item->ID, $item, $args );			$id = strlen( $id ) ? ' id="' . esc_attr( $id ) . '"' : '';			$output .= $indent . '<li' . $id . $value . $class_names .'>';			if ( ! empty( $item->post_type ) && $item->post_type == 'nav_menu_item' ) {				$attributes  = ! empty( $item->attr_title ) ? ' title="'  . esc_attr( $item->attr_title ) .'"' : '';				$attributes .= ! empty( $item->target )     ? ' target="' . esc_attr( $item->target     ) .'"' : '';				$attributes .= ! empty( $item->xfn )        ? ' rel="'    . esc_attr( $item->xfn        ) .'"' : '';				$attributes .= ! empty( $item->url )        ? ' href="'   . esc_attr( $item->url        ) .'"' : '';			} else {				$attributes  = ! empty( $item->post_title ) ? ' title="'  . esc_attr( $item->post_title ) .'"' : '';				$attributes .= ! empty( $item->target )     ? ' target="' . esc_attr( $item->target     ) .'"' : '';				$attributes .= ! empty( $item->xfn )        ? ' rel="'    . esc_attr( $item->xfn        ) .'"' : '';				$attributes .= ' href= "' . esc_attr( get_permalink( $item->ID ) ) . '"';			 				$item->title = $item->post_title;			}			if( $this -> count < $this -> limit ){				if( $this -> oncurrent){					if( in_array( 'current-menu-item' , $classes ) ){						$item -> title = $this -> before . '<span class="label-menu-item">' . $item -> title . '</span>' . $this -> after;					}else{						$item -> title = '<span class="label-menu-item">' . $item -> title . '</span>';					}				}else{					$item -> title = $this -> before . '<span class="label-menu-item">' . $item -> title . '</span>' . $this -> after;				}			}						$item_output = '';						if( !empty ( $args->before ) ) {				$item_output .= $args->before;			}						$item_output .= '<a'. $attributes .'>';						if( !empty ( $args->link_before ) ) {				$item_output .= $args->link_before . apply_filters( 'the_title', $item->title, $item->ID );			}else{				$item_output .= apply_filters( 'the_title', $item->title, $item->ID );			}						if( !empty ( $args->link_after ) ) {				$item_output .= $args->link_after;			}						$item_output .= '</a>';						if( !empty( $args->after ) ){				$item_output .= $args->after;			}						$output .= apply_filters( 'walker_nav_menu_start_el', $item_output, $item, $depth, $args );		}		function end_el(&$output, $item, $depth) {			$output .= "</li>\n";		}	}					function menu($before = '',$after = '', $more = '<span class="label-menu-item">More ..</span>',$current = false){			$limit = get_menu_limit();		$my_nav_menu = new mythemes_walker_nav_menu($limit,$before,$after,$more,$current);				$args = array(			'menu'            => '', 			'container'       => 'div', 			'container_class' => 'container', 			'container_id'    => '', 			'menu_class'      => 'container', 			'menu_id'         => '',			'echo'            => false,			'fallback_cb'     => '',			'before'          => '',			'after'           => '',			'link_before'     => '',			'link_after'      => '',			'depth'           => 0,			'walker'          => $my_nav_menu,			'theme_location'  => 'menu_in_header',		); //menu_in_header				$result = wp_nav_menu( $args );				if(!$result){			$result = get_page_menu( );		}				if($my_nav_menu -> need_more){			$result .="</li></ul></div>";		}		return $result;	}	?>